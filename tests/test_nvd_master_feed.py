import json
import os
from collections import OrderedDict
from unittest import TestCase

import requests_mock

from cvefeed import NVDMasterFeed


@requests_mock.mock()
class TestNVDMasterFeed(TestCase):
    basefolder = os.path.dirname(os.path.realpath(__file__))
    cvegzip = os.path.join(basefolder, 'resources', 'cve_test.xml.gz')
    cvedict = os.path.join(basefolder, 'resources', 'expected_cve_dict.txt')
    nvd = NVDMasterFeed()

    def get_test_gzip(self):
        with open(self.cvegzip, 'rb') as infile:
            return infile.read()

    def get_expected_output(self):
        with open(self.cvedict, 'rb') as infile:
            return json.loads(infile.read(), object_pairs_hook=OrderedDict)

    def test_retrieve_feed_as_dict(self, mock):
        url = 'https://nvd.nist.gov/feeds/xml/cve/nvdcve-2.0-2003.xml.gz'
        testgzip = self.get_test_gzip()
        expectedoutput = self.get_expected_output()
        mock.get(url, content=testgzip)
        testdict = self.nvd.retrieve_feed_as_dict(url)
        self.assertTrue(mock.called)
        self.assertDictEqual(expectedoutput, testdict)
