import json
import zlib

import requests
import xmltodict


class NVDMasterFeed:
    def __init__(self):
        pass

    @staticmethod
    def retrieve_feed_as_dict(url):
        """
        Returns dictionary of contents from downloaded gzip NVD CVE feed.
        :param url: GZipped file location
        :return: dictionary of file contents converted from XML.
        """
        resp = requests.get(url, stream=True)
        if not resp.ok:
            raise requests.RequestException('Error retrieving {}.'.format(url))
        memfile = xmltodict.parse(zlib.decompress(resp.content, 16 + zlib.MAX_WBITS))
        del resp
        return memfile

    @staticmethod
    def write_feed_to_file(feed, outputfile='tmp.txt'):
        """
        Temporary method to dump the file in a nicely formatted text file.
        :param feed: dictionary of results from retrieve_feed_as_dict
        :param outputfile: name of file
        """
        with open(outputfile, 'wb') as outfile:
            outfile.write(json.dumps(feed, indent=4))

    def retrieve_and_save(self, year):
        """
        Temporary method to wrap the retrieval and writing to file.
        :param year: year of CVE data to target
        """
        url = 'https://nvd.nist.gov/feeds/xml/cve/nvdcve-2.0-{}.xml.gz'.format(year)
        print('Retrieving and saving {}\n'.format(url))
        cvefeed = self.retrieve_feed_as_dict(url)
        self.write_feed_to_file(feed=cvefeed, outputfile='{}-cve-list.txt'.format(year))
        print('{} complete.'.format(year))


if __name__ == '__main__':
    from sys import argv
    NVDMasterFeed().retrieve_and_save(argv[1])
